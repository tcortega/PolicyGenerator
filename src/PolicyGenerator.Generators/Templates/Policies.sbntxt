using Microsoft.AspNetCore.Authorization;
using Microsoft.Extensions.DependencyInjection;

namespace Microsoft.AspNetCore.Authorization;

/// <summary>
/// This code was automatically generated by PolicyGenerator.
/// </summary>
public static partial class {{ assembly }}PolicyRegister
{
	/// <summary>
	/// This code was automatically generated by PolicyGenerator.
	/// </summary>
    public static string[] AllClaims = [{{ all_claims }}];

	/// <summary>
	/// This code was automatically generated by PolicyGenerator.
	/// </summary>
	public static string[] AllRoles = [{{ all_roles }}];

	/// <summary>
	/// This code was automatically generated by PolicyGenerator.
	/// </summary>
    public static AuthorizationBuilder Add{{ assembly }}Policies(this IServiceCollection services, 
    	string claimType = "Permission")
    	=> services.AddAuthorizationBuilder()
    		{{~ for p in policies ~}}
        	.AddPolicy({{ p.class_path }}.Name, p => {
        		{{~ if p.claims ~}}
        		p.RequireClaim(claimType, {{ p.class_path }}.Claims);
        		{{~ end ~}}
        		{{~ if p.roles ~}}
        		p.RequireRole({{ p.class_path }}.Roles);
        		{{~ end ~}}
        		{{~ if p.authentication_schemes ~}}
        		p.AuthenticationSchemes = {{ p.class_path }}.AuthenticationSchemes;
				p.RequireAuthenticatedUser();
        		{{~ end ~}}
        	})
        	{{~ end ~}}
        	;
}
